---
layout: page
title: "Git Cheat Sheet"
tags: [git,cheatsheet]
---
{% include JB/setup %}


<div class="row">
  <div class="span6">
    <ul class="thumbnails">
      <li class="span12">
        <div class="thumbnail">
          <img src="git-overview.png" alt="Git Big Picture">
        </div>
      </li>
    </ul>
  </div>
</div>

<div class="row">
  <div class="span6">

h2. Create

*From existing data*

{% highlight sh %}
cd <DIRECTORY>
git init
git add .
git commit
{% endhighlight %}

*From existing repo*

{% highlight sh %}
git clone <EXISTING_REPO> <NEW_REPO>
{% endhighlight %}

default protocol is ssh
EXISTING_REPO is a local path or a remote URL, for examples :
* _path_ : ~/repository.git
* _ssh_ : git@host:repository.git
* _http(s)_ : https://username@host/repository.git

h2. Update

*Fetch latest changes from origin*

{% highlight sh %}
git fetch
{% endhighlight %}

this does not merge them

*Pull latest changes from origin*

{% highlight sh %}
git pull
{% endhighlight %}

does a fetch followed by a merge

In case of conflict, resolve the conflict and

{% highlight sh %}
git am --resolve
{% endhighlight %}

h2. Track Files

*Start tracking files*

{% highlight sh %}
git add <FILES>
{% endhighlight %}

*Interactive selection of files to track*

{% highlight sh %}
git add -i
{% endhighlight %}

*Move/Rename a file*

{% highlight sh %}
git mv <OLD_NAME> <NEW_NAME>
git mv <OLD_PATH> <NEW_PATH>
{% endhighlight %}

*Stop tracking and delete files in working directories*

{% highlight sh %}
git rm <FILES>
{% endhighlight %}

*Stop tracking but keep files in working directory*

{% highlight sh %}
git rm --cached <FILES>
{% endhighlight %}

h2. Commit

*Commit all local changes*

{% highlight sh %}
git commit -a
{% endhighlight %}

h2. Publish

*Prepare a patch for other developers*

{% highlight sh %}
git format-patch origin
{% endhighlight %}

*Push changes to origin*

{% highlight sh %}
git push origin <BRANCH>
{% endhighlight %}

Use option @--all@ to push all local references (branches, tags..), @--tags@ to push all tags,
@--force@ to push non fast-forward changes (must be avoided to not risk to loose commits)

*Make a version or milestone*

{% highlight sh %}
git tag <TAG_NAME>
{% endhighlight %}

  </div>
  <div class="span6">

h2. Browse

*Files changed in working directory*

{% highlight sh %}
git status
{% endhighlight %}

*Changes to tracked files*

{% highlight sh %}
git diff
{% endhighlight %}

*Changes between ID1 and ID2*

{% highlight sh %}
git diff <ID1> <ID2>
{% endhighlight %}

*History of changes*

{% highlight sh %}
git log
{% endhighlight %}

*Who changed what and when in a file*

{% highlight sh %}
git blame <FILE>
{% endhighlight %}

*A commit identified by ID*

{% highlight sh %}
git show <ID>
{% endhighlight %}

*A specific file from a specific ID*

{% highlight sh %}
git diff <ID>:<FILE>
{% endhighlight %}

*Search for patterns*

{% highlight sh %}
git grep <PATTERN> <PATH>
{% endhighlight %}

h2. Branch

*List all branches*

{% highlight sh %}
git branch
{% endhighlight %}

*Switch to the BRANCH branch*

{% highlight sh %}
git checkout <BRANCH>
{% endhighlight %}

*Merge branch B1 into branch B2*

{% highlight sh %}
git checkout <B2>
git merge <B1>
{% endhighlight %}

*Create branch based on HEAD*

{% highlight sh %}
git branch <BRANCH>
{% endhighlight %}

*Create branch based on another*

{% highlight sh %}
git branch <NEW> <BASE>
{% endhighlight %}

*Delete a local branch*

{% highlight sh %}
git branch -d <BRANCH>
{% endhighlight %}

*Delete a remote branch*

{% highlight sh %}
git push <origin> :<BRANCH>
{% endhighlight %}

h2. Revert

*Return to the last committed state*

{% highlight sh %}
git checkout -f | git reset --hard
{% endhighlight %}

you cannot undo a hard reset

*Revert the last commit*

{% highlight sh %}
git revert HEAD
{% endhighlight %}

Creates a new commit

*Revert specific commit*

{% highlight sh %}
git revert <ID>
{% endhighlight %}

Creates a new commit

*Fix the last commit*

{% highlight sh %}
git commit -a --amend
{% endhighlight %}

after editing the broken files

*Checkout the ID version of a file*

{% highlight sh %}
git checkout <ID> <FILE>
{% endhighlight %}

  </div>
</div>

<div class="row">
  <div class="span12">
    <div class="well">

h2. Sources

* "Alex Zeitler Git cheat sheet":https://github.com/AlexZeitler/gitcheatsheet
* "Jan Krueger Git cheat sheet":http://jan-krueger.net/git

    </div>
  </div>
</div>
